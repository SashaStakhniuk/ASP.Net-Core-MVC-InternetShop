@model MVCBikeShop.Models.ViewModels.UserViewModel
@{
    ViewData["Title"] = "CreateUser";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@*
<head>
    <link type="text/css" rel="stylesheet" href="~/Css/background.css" />
</head>
<body class="back">
    <form asp-controller="User" asp-action="CreateUser" method="post" class="d-flex flex-column m-3 p-3">
        <div asp-validation-summary="ModelOnly"></div>
        <div>
            <div class="d-flex flex-row m-2">
                @Html.LabelFor(x => x.UserName, null, new { @class = "input-group-text" })
                @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.UserName)
            </div>
            <div class="d-flex flex-row m-2">
                @Html.LabelFor(x => x.LastName, null, new { @class = "input-group-text" })
                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.LastName)
            </div>
            <div class="d-flex flex-row m-2">
                @Html.LabelFor(x => x.UserEmail, null, new { @class = "input-group-text" })
                @Html.TextBoxFor(x => x.UserEmail, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.UserEmail)
            </div>

            <div class="d-flex flex-row m-2">
                @Html.LabelFor(x => x.Password, null, new { @class = "input-group-text" })
                @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Password)
            </div>
            <div class="form-group" style="color:white;">
                <div>Role:</div>
                @foreach (var role in Model.AllRoles)
                {
                    <input type="radio" name="UserRoles" value="@role.Name" @(Model.UserRoles.Contains(role.Name) ? "checked=\"checked\"" : "") />@role.Name <br />
                }
            </div>
        </div>
        <input type="submit" class="btn btn-success" value="Create" />
    </form>
</body>*@
@{
    Layout = null;
}
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link type="text/css" rel="stylesheet" href="~/Css/registration.css" />
    <link type="text/css" rel="stylesheet" href="~/fonts/material-icon/css/material-design-iconic-font.min.css">
</head>

<body>
    <div class="main">

        <section class="signup">
            <div class="container">
                 <div class="signup-content">
                     <form method="post" id="signup-form" class="signup-form">

                         <h2 class="form-title">Create account</h2>
                         @*@Html.ValidationSummary()*@
                         <div class="form-group">
                             @Html.LabelFor(x => x.UserName, null, new { @class = "input-group-text" })
                             @Html.TextBoxFor(x => x.UserName, new { @class = "form-control" })
                             @Html.ValidationMessageFor(x => x.UserName)
                         </div>
                         <div class="form-group">
                             @Html.LabelFor(x => x.LastName, null, new { @class = "input-group-text" })
                             @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
                             @Html.ValidationMessageFor(x => x.LastName)
                         </div>
                         <div class="form-group">
                             @Html.LabelFor(x => x.UserEmail, null, new { @class = "input-group-text" })
                             @Html.TextBoxFor(x => x.UserEmail, new { @class = "form-control" })
                             @Html.ValidationMessageFor(x => x.UserEmail)
                         </div>
                         <div class="form-group">
                             @Html.LabelFor(x => x.Password, null, new { @class = "input-group-text" })
                             @Html.PasswordFor(x => x.Password, new { @class = "form-control" })
                             @Html.ValidationMessageFor(x => x.Password)
                         </div>
                         <div class="form-group" style="color:black;">
                             <div>Role:</div>
                             @foreach (var role in Model.AllRoles)
                             {
                                 <input type="radio" name="UserRoles" value="@role.Name" @(Model.UserRoles.Contains(role.Name) ? "checked=\"checked\"" : "") />@role.Name <br />
                             }
                         </div>

                         <div class="form-group">
                             <input type="submit" name="submit" id="submit" class="form-submit" value="Create" />
                         </div>
                     </form> 
                     <p></p>
                     <div class="display-flex justify-content-around">
                         <p class="btn btn-secondary">
                             <a style="color:white; text-decoration: none;" href="~/User/Index">Back to users list</a>
                         </p>
                         <p class="btn btn-secondary">
                             <a style="color:white;text-decoration: none;" href="~/Home/Index/1">Back to main page</a>
                         </p>

                     </div>
                 
                 </div>
            </div>
        </section>

    </div>

    <!-- JS -->
    <script src="~/vendor/jquery/jquery.min.js"></script>
</body>