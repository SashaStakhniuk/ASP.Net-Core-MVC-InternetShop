@model MVCBikeShop.Models.ViewModels.BikeViewModel

@{
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div id="message">
    <h1 class="d-flex justify-content-center">@ViewBag.Text</h1>
</div>

<script>
    setTimeout(function () {
        document.getElementById('message').style.display = 'none';
    }, 10000);
</script>
@*<a asp-controller="Account" asp-action="ModalLogin">ModalLogin</a>*@
<button class="btn btn-outline-secondary" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasWithBothOptions" aria-controls="offcanvasWithBothOptions">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-filter" viewBox="0 0 16 16">
        <path d="M6 10.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7a.5.5 0 0 1-.5-.5zm-2-3a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 0 1h-11a.5.5 0 0 1-.5-.5z" />
    </svg>
</button>


<div class="container">
    <div class="row row-cols-xl-4 row-cols-md-3 row-cols-sm-2 row-cols-1 m-5">
        @foreach (var bike in Model.Bikes)
        {
            <div class="col mb-3 wow fadeInDown" data-wow-duration="1000ms" data-wow-delay="0.3s">
                <div style="display:flex; flex-direction:column; text-align:center; border:1px solid lightgray;border-radius:5px;">
                    <div>@bike.BikeTitle</div>
                    <img src="@bike.PhotoPath" />
                    <div><h6>@bike.Price UAH</h6></div>
                    <div class="d-flex flex-row justify-content-around p-2">
                        @using (Html.BeginForm("AddToCart", "Cart"))
                        {
                            <input type="hidden" name="BikeId" value="@bike.BikeId" />
                            @Html.Hidden("returnUrl", Context.Request.Path.Value)
                            @*<input type="submit" value="+ Add to Cart" class="btn btn-secondary" />*@
                            <button type="submit" class="btn btn-outline-secondary">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-cart4" viewBox="0 0 16 16">
                                    <path d="M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z" />
                                </svg>
                                Add To Cart
                            </button>
                        }

                        <a href="~/Home/Buy/@bike.BikeId" class="btn btn-secondary">Buy</a>
                        <img src="~/images/icons/info.png" class="infoImg" value="@bike.BikeId" style="width:25px; height:25px;" />
                    </div>
                    <div class="infoBlock" value="@bike.BikeId" style="display:none">
                        <div class="row row-cols-2 justify-content-around p-2">
                            <label>Size:</label>
                            @bike.Size
                            <label>WheelDiameter:</label>
                            @bike.WheelDiameter
                            <label>SpeedCount:</label>
                            @bike.SpeedCount
                            <label>Manufactury:</label>
                            @Model.ManufacturiesList.Where(x => x.ManufacturyId == bike.ManufacturyId).Select(x => x.ManufacturyTitle).FirstOrDefault()
                            <label>Type:</label>
                            @Model.TypesList.Where(x => x.TypeId == bike.TypeId).Select(x => x.TypeTitle).FirstOrDefault()
                            <label>Material:</label>
                            @Model.MaterialsList.Where(x => x.MaterialId == bike.MaterialId).Select(x => x.MaterialTitle).FirstOrDefault()
                            <label>BreakType:</label>
                            @Model.BreakTypeList.Where(x => x.BreakTypeId == bike.BreakTypeId).Select(x => x.BreakTypeTitle).FirstOrDefault()
                        </div>
                       
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    <div style="text-align:center;">Page: @ViewBag.CurrentPage</div>
    <nav>
        <ul class="pagination justify-content-center">
            <li class="page-item"><button class="buttonPagination page-link" value="@(ViewBag.CurrentPage-1)">Previous</button></li>
            @for (int i = 0; i < ViewBag.PagesCount; i++)
            {
                <li class="page-item"><button class="buttonPagination page-link" value="@(i + 1)">@(i + 1)</button></li>
            }
            <li class="page-item"><button class="buttonPagination page-link" value="@(ViewBag.CurrentPage+1)">Next</button></li>
        </ul>
    </nav>
</div>

<div class="offcanvas offcanvas-start" data-bs-scroll="true" tabindex="-1" id="offcanvasWithBothOptions" aria-labelledby="offcanvasWithBothOptionsLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasWithBothOptionsLabel">Filter menu</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body col">
        <p>Search by:</p>

        <div class="d-flex flex-column">
            <div class="m-1 row row-cols-2">
                <div>
                    <b>Manufactury:</b>
                </div>
                <div>
                    <select id="indexManufactury" asp-items="Model.Manufacturies"></select>
                </div>
            </div>
            <div class="m-1 row row-cols-2">
                <div><b>Type:</b></div>

                <div>
                    <select id="indextype" asp-items="Model.Types"></select>
                </div>

            </div>
            <div class="m-1 row row-cols-2">
                <div><b>WheelsDiameter:</b></div>
                <div>
                    <select id="indexwheelDiameters" asp-items="Model.WheelDiameters"></select>
                </div>
            </div>
            <div class="m-1 row row-cols-2">
                <div><b>Material:</b></div>
                <div>
                    <select id="indexmaterial" asp-items="Model.Materials"></select>
                </div>

            </div>
            <div class="m-1 row row-cols-2">
                <div><b>Speeds Amount:</b></div>
                <div>
                    <select id="indexspeedAmount" asp-items="Model.SpeedCount"></select>
                </div>
            </div>
            <div class="m-1 row row-cols-2">
                <div><b>Size:</b></div>
                <div>
                    <select id="indexsize" asp-items="Model.Size"></select>
                </div>
            </div>
            <div class="m-1 row row-cols-2">
                <div><b>Break type:</b></div>
                <div>
                    <select id="indexbreakType" asp-items="Model.BreakType"></select>
                </div>
            </div>
            <b>Price:</b>
            <div class="m-1 row row-cols-2">
                <div>Since:</div>
                <div><input type="number" id="indexpriceFrom" /></div>
                <br />
                <div>To:</div>
                <div><input type="number" id="indexpriceTo" /></div>
            </div>
            <button id="indexFilterButtonSearch" class="btn btn-sm btn-primary" style="min-width:50%; text-align:center;">Search</button>
        </div>
    </div>
</div>

<script src="~/Js/indexPartial.js"></script>